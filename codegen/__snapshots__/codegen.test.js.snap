// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Generates js ABS match 1`] = `
Object {
  "js": "class CODEGENAbs extends AnimatedNode {
  constructor(input) {
    super(
      {
        type: 'CODEGENAbs',
        input: input,
      },
      input
    );
  }
}",
  "objc": "@interface REACODEGENAbsNode : REANode
@end

@implementation REACODEGENAbsNode {
  NSArray<NSNumber *> *_input;
}

- (instancetype)initWithID:(REANodeID)nodeID config:(NSDictionary<NSString *,id> *)config
{
  if ((self = [super initWithID:nodeID config:config])) {
    _input = config[@\\"input\\"];
  }
  return self;
}

- (id)evaluate
{
  if ([[[self.nodesManager findNodeByID:_input[0]] value] doubleValue] < 0) {
    return @(-1 * [[[self.nodesManager findNodeByID:_input[0]] value] doubleValue]);
  }
  return [[self.nodesManager findNodeByID:_input[0]] value];

}

@end",
  "objcregistry": "@\\"CODEGENAbs\\": [REACODEGENAbsNode class],",
  "registry": "const registry = {
['abs']: CODEGENAbs,
}",
}
`;

exports[`Generates objc ABS match 1`] = `
"@interface REACODEGENAbsNode : REANode
@end

@implementation REACODEGENAbsNode {
  NSArray<NSNumber *> *_input;
}

- (instancetype)initWithID:(REANodeID)nodeID config:(NSDictionary<NSString *,id> *)config
{
  if ((self = [super initWithID:nodeID config:config])) {
    _input = config[@\\"input\\"];
  }
  return self;
}

- (id)evaluate
{
  if ([[[self.nodesManager findNodeByID:_input[0]] value] doubleValue] < 0) {
    return @(-1 * [[[self.nodesManager findNodeByID:_input[0]] value] doubleValue]);
  }
  return [[self.nodesManager findNodeByID:_input[0]] value];

}

@end"
`;
